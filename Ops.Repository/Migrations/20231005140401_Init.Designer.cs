// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ops.Repository;

#nullable disable

namespace Ops.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231005140401_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ops.Core.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CountyId = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(744),
                            CustomerId = 1,
                            DeletedBy = "admin",
                            Description = "Üsküdar metrobüse yakın",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CountyId = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(755),
                            CustomerId = 2,
                            DeletedBy = "admin",
                            Description = "Acıbadem metroya yakın",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1099),
                            DeletedBy = "admin",
                            Email = "orangepressstore@gmail.com",
                            FirstName = "Ayşe Nur",
                            IsActive = true,
                            LastName = "Tabak",
                            ModifiedBy = "admin",
                            Password = "Beste1998.",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1204),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Tişört",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1207),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Sweat",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1209),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Çanta",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1362),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Istanbul",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1366),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Ankara",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Mark")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1460),
                            CustomerId = 1,
                            DeletedBy = "admin",
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ModifiedBy = "admin",
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1462),
                            CustomerId = 1,
                            DeletedBy = "admin",
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 4,
                            ModifiedBy = "admin",
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1464),
                            CustomerId = 2,
                            DeletedBy = "admin",
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ModifiedBy = "admin",
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1465),
                            CustomerId = 2,
                            DeletedBy = "admin",
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ModifiedBy = "admin",
                            ProductId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1558),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Fatih",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1561),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Üsküdar",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1562),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Kızılay",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1563),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Çankaya",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1659),
                            DateOfBirth = new DateTime(1998, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedBy = "admin",
                            Email = "besteyasak@gmail.com",
                            FirstName = "Beste",
                            IsActive = true,
                            LastName = "Yasak",
                            ModifiedBy = "admin",
                            Password = "Beste1998.",
                            PhoneNumber = "05362459825",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1838),
                            DateOfBirth = new DateTime(1997, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedBy = "admin",
                            Email = "huseyingulerman.1997@gmail.com",
                            FirstName = "Hüseyin",
                            IsActive = true,
                            LastName = "Gülerman",
                            ModifiedBy = "admin",
                            Password = "Beste1998.",
                            PhoneNumber = "05325841236",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1939),
                            CustomerId = 1,
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            OrderStatus = 1,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1941),
                            CustomerId = 1,
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            OrderStatus = 4,
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1943),
                            CustomerId = 1,
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            OrderStatus = 3,
                            ProductId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(1944),
                            CustomerId = 2,
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            OrderStatus = 2,
                            ProductId = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2198),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Tişört",
                            Price = 200m,
                            Status = 1,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2203),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Kısa Kollu Tişört",
                            Price = 150m,
                            Status = 1,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2204),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = " Uzun Kollu Tişört",
                            Price = 300m,
                            Status = 1,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2206),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Çanta",
                            Price = 400m,
                            Status = 1,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2207),
                            DeletedBy = "admin",
                            IsActive = true,
                            ModifiedBy = "admin",
                            Name = "Sweat",
                            Price = 500m,
                            Status = 1,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Sarı",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2034),
                            DeletedBy = "admin",
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ModifiedBy = "admin",
                            ProductId = 1,
                            Size = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Color = "Mavi",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2036),
                            DeletedBy = "admin",
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ModifiedBy = "admin",
                            ProductId = 2,
                            Size = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Color = "Beyaz",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2099),
                            DeletedBy = "admin",
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ModifiedBy = "admin",
                            ProductId = 3,
                            Size = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Color = "Beyaz",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2101),
                            DeletedBy = "admin",
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ModifiedBy = "admin",
                            ProductId = 4,
                            Size = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Color = "Beyaz",
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2023, 10, 5, 17, 4, 1, 106, DateTimeKind.Local).AddTicks(2102),
                            DeletedBy = "admin",
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ModifiedBy = "admin",
                            ProductId = 5,
                            Size = 5,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Address", b =>
                {
                    b.HasOne("Ops.Core.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.County", "County")
                        .WithMany("Addresses")
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("County");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Ops.Core.Entities.Comment", b =>
                {
                    b.HasOne("Ops.Core.Entities.Customer", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.County", b =>
                {
                    b.HasOne("Ops.Core.Entities.City", "City")
                        .WithMany("Counties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Ops.Core.Entities.Order", b =>
                {
                    b.HasOne("Ops.Core.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.HasOne("Ops.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductFeature", b =>
                {
                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("Ops.Core.Entities.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ops.Core.Entities.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Counties");
                });

            modelBuilder.Entity("Ops.Core.Entities.County", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Ops.Core.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Orders");

                    b.Navigation("ProductFeature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
