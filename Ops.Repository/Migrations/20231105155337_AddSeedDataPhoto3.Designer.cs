// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ops.Repository;

#nullable disable

namespace Ops.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231105155337_AddSeedDataPhoto3")]
    partial class AddSeedDataPhoto3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ops.Core.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CountyId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(8204),
                            CustomerId = 1,
                            Description = "Üsküdar metrobüse yakın",
                            IsActive = true,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CountyId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(8217),
                            CustomerId = 2,
                            Description = "Acıbadem metroya yakın",
                            IsActive = true,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(8736),
                            Email = "orangepressstore@gmail.com",
                            FirstName = "Ayşe Nur",
                            IsActive = true,
                            LastName = "Tabak",
                            Password = "Beste1998.",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9007),
                            IsActive = true,
                            Name = "Tişört",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9104),
                            IsActive = true,
                            Name = "Sweat",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9108),
                            IsActive = true,
                            Name = "Çanta",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9391),
                            IsActive = true,
                            Name = "Istanbul",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9398),
                            IsActive = true,
                            Name = "Ankara",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9948),
                            IsActive = true,
                            Name = "Black",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9966),
                            IsActive = true,
                            Name = "Blue",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9972),
                            IsActive = true,
                            Name = "Yellow",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.ColorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ColorProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9659),
                            IsActive = true,
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9673),
                            IsActive = true,
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9679),
                            IsActive = true,
                            ProductId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            ColorId = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 524, DateTimeKind.Local).AddTicks(9683),
                            IsActive = true,
                            ProductId = 3,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Mark")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(247),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(253),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 4,
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(255),
                            CustomerId = 2,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(257),
                            CustomerId = 2,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(523),
                            IsActive = true,
                            Name = "Fatih",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(529),
                            IsActive = true,
                            Name = "Üsküdar",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(615),
                            IsActive = true,
                            Name = "Kızılay",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(618),
                            IsActive = true,
                            Name = "Çankaya",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(897),
                            DateOfBirth = new DateTime(1998, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "besteyasak@gmail.com",
                            FirstName = "Beste",
                            IsActive = true,
                            LastName = "Yasak",
                            Password = "Beste1998.",
                            PhoneNumber = "05362459825",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(913),
                            DateOfBirth = new DateTime(1997, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huseyingulerman.1997@gmail.com",
                            FirstName = "Hüseyin",
                            IsActive = true,
                            LastName = "Gülerman",
                            Password = "Beste1998.",
                            PhoneNumber = "05325841236",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.HomeSlider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("HomeSlider");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1176),
                            IsActive = true,
                            PhotoUrl = "img/bg-img/bg-1.jpg",
                            Status = 1,
                            Subtitle = "Eşsiz Bahar Koleksiyonumuza Bir Göz Gezdirin.",
                            Title = "Bahar Koleksiyonu"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1180),
                            IsActive = true,
                            PhotoUrl = "img/bg-img/bg-2.jpg",
                            Status = 1,
                            Subtitle = "29 Ekime Özel Kargo Bedava.",
                            Title = "Kargo Bedava"
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1449),
                            CustomerId = 1,
                            IsActive = true,
                            OrderStatus = 1,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1454),
                            CustomerId = 1,
                            IsActive = true,
                            OrderStatus = 4,
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1456),
                            CustomerId = 1,
                            IsActive = true,
                            OrderStatus = 3,
                            ProductId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1459),
                            CustomerId = 2,
                            IsActive = true,
                            OrderStatus = 2,
                            ProductId = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1753),
                            IsActive = true,
                            PhotoUrl = "tshirt-1.jpeg",
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1771),
                            IsActive = true,
                            PhotoUrl = "tshirt-1.jpeg",
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1777),
                            IsActive = true,
                            PhotoUrl = "tshirt-1.jpeg",
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1781),
                            IsActive = true,
                            PhotoUrl = "tshirt-1.jpeg",
                            ProductId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1786),
                            IsActive = true,
                            PhotoUrl = "tshirt-1.jpeg",
                            ProductId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(1794),
                            IsActive = true,
                            PhotoUrl = "tshirt-1.jpeg",
                            ProductId = 4,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 200,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2432),
                            IsActive = true,
                            Name = "Tişört",
                            Price = 200m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2443),
                            IsActive = true,
                            Name = "Kısa Kollu Tişört",
                            Price = 150m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2447),
                            IsActive = true,
                            Name = " Uzun Kollu Tişört",
                            Price = 300m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 20,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2451),
                            IsActive = true,
                            Name = "Çanta",
                            Price = 400m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 100,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2455),
                            IsActive = true,
                            Name = "Sweat",
                            Price = 500m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2060),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2064),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2066),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2069),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2070),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 5,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2960),
                            IsActive = true,
                            Name = "Small",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2976),
                            IsActive = true,
                            Name = "Medium",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2982),
                            IsActive = true,
                            Name = "Large",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.SizeProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("SizeProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2705),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2721),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(2726),
                            IsActive = true,
                            ProductId = 3,
                            SizeId = 3,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stocks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId")
                        .IsUnique();

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("SizeId")
                        .IsUnique();

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(3210),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 10
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 1,
                            CreatedDate = new DateTime(2023, 11, 5, 18, 53, 34, 525, DateTimeKind.Local).AddTicks(3226),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Address", b =>
                {
                    b.HasOne("Ops.Core.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.County", "County")
                        .WithMany("Addresses")
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("County");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Ops.Core.Entities.ColorProduct", b =>
                {
                    b.HasOne("Ops.Core.Entities.Color", "Color")
                        .WithMany("ColorProducts")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("ColorProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.Comment", b =>
                {
                    b.HasOne("Ops.Core.Entities.Customer", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.County", b =>
                {
                    b.HasOne("Ops.Core.Entities.City", "City")
                        .WithMany("Counties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Ops.Core.Entities.HomeSlider", b =>
                {
                    b.HasOne("Ops.Core.Entities.Category", "Category")
                        .WithMany("HomeSliders")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ops.Core.Entities.Order", b =>
                {
                    b.HasOne("Ops.Core.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.Photo", b =>
                {
                    b.HasOne("Ops.Core.Entities.Color", "Color")
                        .WithMany("Photos")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.HasOne("Ops.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductFeature", b =>
                {
                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("Ops.Core.Entities.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.SizeProduct", b =>
                {
                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("SizeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Size", "Size")
                        .WithMany("SizeProducts")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Ops.Core.Entities.Stock", b =>
                {
                    b.HasOne("Ops.Core.Entities.Color", "Color")
                        .WithOne("Stock")
                        .HasForeignKey("Ops.Core.Entities.Stock", "ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithOne("Stock")
                        .HasForeignKey("Ops.Core.Entities.Stock", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Size", "Size")
                        .WithOne("Stock")
                        .HasForeignKey("Ops.Core.Entities.Stock", "SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Ops.Core.Entities.Category", b =>
                {
                    b.Navigation("HomeSliders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ops.Core.Entities.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Counties");
                });

            modelBuilder.Entity("Ops.Core.Entities.Color", b =>
                {
                    b.Navigation("ColorProducts");

                    b.Navigation("Photos");

                    b.Navigation("Stock")
                        .IsRequired();
                });

            modelBuilder.Entity("Ops.Core.Entities.County", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Ops.Core.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.Navigation("ColorProducts");

                    b.Navigation("Comments");

                    b.Navigation("Orders");

                    b.Navigation("Photos");

                    b.Navigation("ProductFeature")
                        .IsRequired();

                    b.Navigation("SizeProducts");

                    b.Navigation("Stock")
                        .IsRequired();
                });

            modelBuilder.Entity("Ops.Core.Entities.Size", b =>
                {
                    b.Navigation("SizeProducts");

                    b.Navigation("Stock")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
