// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ops.Repository;

#nullable disable

namespace Ops.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240109102816_Init090124")]
    partial class Init090124
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Ops.Core.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 2,
                            CountyId = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8124),
                            CustomerId = 1,
                            Description = "Üsküdar metrobüse yakın",
                            FirstName = "Beste",
                            IsActive = true,
                            LastName = "Yasak",
                            PhoneNumber = "05360249093",
                            Status = 1,
                            ZIP = "34700"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CountyId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8130),
                            CustomerId = 2,
                            Description = "Acıbadem metroya yakın",
                            FirstName = "Hüseyin",
                            IsActive = true,
                            LastName = "Gülerman",
                            PhoneNumber = "05360249093",
                            Status = 1,
                            ZIP = "34700"
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 9, 13, 28, 16, 355, DateTimeKind.Local).AddTicks(8120));

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "cb32556e-d001-4f09-a928-da6cb70902e5",
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9846),
                            DisplayName = "Yönetici",
                            IsActive = true,
                            Name = "admin",
                            NormalizedName = "ADMIN",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "b11d9df7-a576-4018-8531-07e22cf9f911",
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9852),
                            DisplayName = "Müşteri",
                            IsActive = true,
                            Name = "customer",
                            NormalizedName = "CUSTOMER",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 9, 13, 28, 16, 355, DateTimeKind.Local).AddTicks(8458));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("MembershipAgreement")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PersonelDataProtection")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e98e201c-1b67-4303-931e-24ff81686009",
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8911),
                            DateOfBirth = new DateTime(1998, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "besteyasak@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Beste",
                            IsActive = true,
                            LastName = "Yasak",
                            LockoutEnabled = false,
                            PasswordHash = "Beste1998.",
                            PhoneNumber = "05362459825",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "d8ec1599-bcb1-470c-9523-2db3c08251a4"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f591e50a-0a57-49d1-b3a9-20b970380de9",
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8968),
                            DateOfBirth = new DateTime(1997, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huseyingulerman.1997@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Hüseyin",
                            IsActive = true,
                            LastName = "Gülerman",
                            LockoutEnabled = false,
                            PasswordHash = "Beste1998.",
                            PhoneNumber = "05325841236",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "7a7ed1e2-4350-4668-82b9-419252debe4e"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "12275daf-fa10-4004-8b9e-a956b636d3bb",
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8988),
                            DateOfBirth = new DateTime(1997, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "orangepressstore@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ayşe",
                            IsActive = true,
                            LastName = "Tabak",
                            LockoutEnabled = false,
                            PasswordHash = "Beste1998.",
                            PhoneNumber = "05325841236",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "df82068f-00b6-4cfd-9c42-b9fc5de77a2c"
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8313),
                            IsActive = true,
                            Name = "Tişört Regular",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8316),
                            IsActive = true,
                            Name = "Tişört Oversize",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8317),
                            IsActive = true,
                            Name = "Hoodie",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8318),
                            IsActive = true,
                            Name = "Sweatshirt",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8319),
                            IsActive = true,
                            Name = "Kol Çantası",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8320),
                            IsActive = true,
                            Name = "Cüzdan",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8321),
                            IsActive = true,
                            Name = "Baf",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8403),
                            IsActive = true,
                            Name = "Istanbul",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8407),
                            IsActive = true,
                            Name = "Ankara",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8629),
                            IsActive = true,
                            Name = "Black",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8634),
                            IsActive = true,
                            Name = "Blue",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8636),
                            IsActive = true,
                            Name = "Yellow",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8637),
                            IsActive = true,
                            Name = "Somon",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8639),
                            IsActive = true,
                            Name = "Gray",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8641),
                            IsActive = true,
                            Name = "Green",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8643),
                            IsActive = true,
                            Name = "Beige",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8645),
                            IsActive = true,
                            Name = "White",
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8646),
                            IsActive = true,
                            Name = "Orange",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.ColorProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ColorProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8488),
                            IsActive = true,
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8494),
                            IsActive = true,
                            ProductId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8496),
                            IsActive = true,
                            ProductId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8497),
                            IsActive = true,
                            ProductId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            ColorId = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8499),
                            IsActive = true,
                            ProductId = 5,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8531),
                            IsActive = true,
                            ProductId = 6,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8533),
                            IsActive = true,
                            ProductId = 7,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8535),
                            IsActive = true,
                            ProductId = 8,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8536),
                            IsActive = true,
                            ProductId = 9,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8539),
                            IsActive = true,
                            ProductId = 10,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8541),
                            IsActive = true,
                            ProductId = 11,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8542),
                            IsActive = true,
                            ProductId = 12,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8544),
                            IsActive = true,
                            ProductId = 13,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            ColorId = 8,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8545),
                            IsActive = true,
                            ProductId = 14,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8546),
                            IsActive = true,
                            ProductId = 15,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8548),
                            IsActive = true,
                            ProductId = 16,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            ColorId = 9,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8549),
                            IsActive = true,
                            ProductId = 17,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8551),
                            IsActive = true,
                            ProductId = 18,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Mark")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8757),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8759),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 4,
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8760),
                            CustomerId = 2,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8761),
                            CustomerId = 2,
                            Description = "Çok güzel ürünler",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8762),
                            CustomerId = 1,
                            Description = "Çok demode",
                            IsActive = true,
                            Mark = 1,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8762),
                            CustomerId = 2,
                            Description = "Kibar duruyor ama pahalı",
                            IsActive = true,
                            Mark = 2,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8763),
                            CustomerId = 1,
                            Description = "Ehhhhh fena sayılmaz. Birdaha almam ama. :)",
                            IsActive = true,
                            Mark = 3,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8764),
                            CustomerId = 2,
                            Description = "Çok güzel ürünler. Baya beğendim. Alınır",
                            IsActive = true,
                            Mark = 4,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8765),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler.Bayıldım. Herkese tavsiye ederim.",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8766),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler.Bayıldım. Herkese tavsiye ederim.",
                            IsActive = true,
                            Mark = 2,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8766),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler.Bayıldım. Herkese tavsiye ederim.",
                            IsActive = true,
                            Mark = 5,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8767),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler.Bayıldım. Herkese tavsiye ederim.",
                            IsActive = true,
                            Mark = 1,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8768),
                            CustomerId = 1,
                            Description = "Çok güzel ürünler.Bayıldım. Herkese tavsiye ederim.",
                            IsActive = true,
                            Mark = 2,
                            ProductId = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8838),
                            IsActive = true,
                            Name = "Fatih",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8841),
                            IsActive = true,
                            Name = "Üsküdar",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8842),
                            IsActive = true,
                            Name = "Kızılay",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(8843),
                            IsActive = true,
                            Name = "Çankaya",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.HomeSlider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("HomeSlider");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9064),
                            IsActive = true,
                            PhotoUrl = "img/bg-img/bg-1.jpg",
                            Status = 1,
                            Subtitle = "Eşsiz Bahar Koleksiyonumuza Bir Göz Gezdirin.",
                            Title = "Bahar Koleksiyonu"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9066),
                            IsActive = true,
                            PhotoUrl = "img/bg-img/bg-2.jpg",
                            Status = 1,
                            Subtitle = "29 Ekime Özel Kargo Bedava.",
                            Title = "Kargo Bedava"
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9175),
                            Description = "Fiziksel bir mağazanız bulunuyor mu acaba?",
                            Email = "beyasak@hotmail.com",
                            IsActive = true,
                            Name = "Beste",
                            Status = 0,
                            Subject = "Bilgi Alma"
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("ShipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9256),
                            CustomerId = 1,
                            IsActive = true,
                            OrderStatus = 1,
                            Status = 1,
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9258),
                            CustomerId = 1,
                            IsActive = true,
                            OrderStatus = 4,
                            Status = 1,
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9259),
                            CustomerId = 1,
                            IsActive = true,
                            OrderStatus = 3,
                            Status = 1,
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9260),
                            CustomerId = 2,
                            IsActive = true,
                            OrderStatus = 2,
                            Status = 1,
                            TotalPrice = 0m
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9341),
                            IsActive = true,
                            PhotoUrl = "tişört1.jpeg",
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9346),
                            IsActive = true,
                            PhotoUrl = "tişört2.jpeg",
                            ProductId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9347),
                            IsActive = true,
                            PhotoUrl = "tişört3.jpeg",
                            ProductId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9349),
                            IsActive = true,
                            PhotoUrl = "tişört4.jpeg",
                            ProductId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            ColorId = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9351),
                            IsActive = true,
                            PhotoUrl = "tişört5.jpeg",
                            ProductId = 5,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9353),
                            IsActive = true,
                            PhotoUrl = "tişört6.jpeg",
                            ProductId = 6,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9355),
                            IsActive = true,
                            PhotoUrl = "hoodie1.jpeg",
                            ProductId = 7,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9357),
                            IsActive = true,
                            PhotoUrl = "hoodie2.jpeg",
                            ProductId = 8,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9358),
                            IsActive = true,
                            PhotoUrl = "hoodie3.jpeg",
                            ProductId = 9,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9360),
                            IsActive = true,
                            PhotoUrl = "hoodie4.jpeg",
                            ProductId = 10,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9362),
                            IsActive = true,
                            PhotoUrl = "hoodie5.jpeg",
                            ProductId = 11,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9363),
                            IsActive = true,
                            PhotoUrl = "hoodie6.jpeg",
                            ProductId = 12,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9365),
                            IsActive = true,
                            PhotoUrl = "sweat1.jpeg",
                            ProductId = 13,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            ColorId = 8,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9366),
                            IsActive = true,
                            PhotoUrl = "sweat2.jpeg",
                            ProductId = 14,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9368),
                            IsActive = true,
                            PhotoUrl = "sweat3.jpeg",
                            ProductId = 15,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9369),
                            IsActive = true,
                            PhotoUrl = "sweat4.jpeg",
                            ProductId = 16,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            ColorId = 9,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9370),
                            IsActive = true,
                            PhotoUrl = "sweat5.jpeg",
                            ProductId = 17,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9373),
                            IsActive = true,
                            PhotoUrl = "sweat6.jpeg",
                            ProductId = 18,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9679),
                            IsActive = true,
                            Name = "Tişört",
                            Price = 200m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9686),
                            IsActive = true,
                            Name = "Tişört",
                            Price = 150m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9687),
                            IsActive = true,
                            Name = "Tişört",
                            Price = 300m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9717),
                            IsActive = true,
                            Name = "Tişört",
                            Price = 300m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9719),
                            IsActive = true,
                            Name = "Tişört",
                            Price = 300m,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9720),
                            IsActive = true,
                            Name = "Tişört",
                            Price = 400m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9721),
                            IsActive = true,
                            Name = "Hoodie",
                            Price = 400m,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9722),
                            IsActive = true,
                            Name = "Hoodie",
                            Price = 500m,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9724),
                            IsActive = true,
                            Name = "Hoodie",
                            Price = 250m,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9725),
                            IsActive = true,
                            Name = "Hoodie",
                            Price = 350m,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9726),
                            IsActive = true,
                            Name = "Hoodie",
                            Price = 450m,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9727),
                            IsActive = true,
                            Name = "Hoodie",
                            Price = 1050m,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9729),
                            IsActive = true,
                            Name = "Sweat",
                            Price = 1050m,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9730),
                            IsActive = true,
                            Name = "Sweat",
                            Price = 1050m,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9731),
                            IsActive = true,
                            Name = "Sweat",
                            Price = 1050m,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9732),
                            IsActive = true,
                            Name = "Sweat",
                            Price = 1050m,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9733),
                            IsActive = true,
                            Name = "Sweat",
                            Price = 1050m,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9735),
                            IsActive = true,
                            Name = "Sweat",
                            Price = 1050m,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9736),
                            IsActive = true,
                            Name = "Baf",
                            Price = 400m,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9737),
                            IsActive = true,
                            Name = "Çanta",
                            Price = 400m,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9765),
                            IsActive = true,
                            Name = "Cüzdan",
                            Price = 400m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9488),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9489),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9490),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9491),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9492),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9492),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9493),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 7,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9494),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 8,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9494),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 9,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9495),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 10,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9496),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 11,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9497),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 12,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9497),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 13,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9498),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 14,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9499),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 15,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9499),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 16,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9500),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 17,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9501),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 18,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9502),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 19,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9502),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 20,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9503),
                            Description = "30 derecede yıkayınız",
                            IsActive = true,
                            ProductId = 21,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrder");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9597),
                            IsActive = true,
                            OrderId = 1,
                            ProductId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9599),
                            IsActive = true,
                            OrderId = 1,
                            ProductId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9600),
                            IsActive = true,
                            OrderId = 2,
                            ProductId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9601),
                            IsActive = true,
                            OrderId = 2,
                            ProductId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Amount = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9602),
                            IsActive = true,
                            OrderId = 3,
                            ProductId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Amount = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9602),
                            IsActive = true,
                            OrderId = 4,
                            ProductId = 5,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(67),
                            IsActive = true,
                            Name = "Small",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(70),
                            IsActive = true,
                            Name = "Medium",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(72),
                            IsActive = true,
                            Name = "Large",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.SizeProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("SizeProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9923),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9926),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9928),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9929),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9931),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9933),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9935),
                            IsActive = true,
                            ProductId = 3,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9936),
                            IsActive = true,
                            ProductId = 3,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9938),
                            IsActive = true,
                            ProductId = 3,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9940),
                            IsActive = true,
                            ProductId = 4,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9941),
                            IsActive = true,
                            ProductId = 4,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9943),
                            IsActive = true,
                            ProductId = 5,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9944),
                            IsActive = true,
                            ProductId = 5,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9945),
                            IsActive = true,
                            ProductId = 6,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9947),
                            IsActive = true,
                            ProductId = 6,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9948),
                            IsActive = true,
                            ProductId = 6,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9949),
                            IsActive = true,
                            ProductId = 7,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9951),
                            IsActive = true,
                            ProductId = 8,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9953),
                            IsActive = true,
                            ProductId = 9,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9954),
                            IsActive = true,
                            ProductId = 10,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9983),
                            IsActive = true,
                            ProductId = 10,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9985),
                            IsActive = true,
                            ProductId = 10,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9987),
                            IsActive = true,
                            ProductId = 11,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9988),
                            IsActive = true,
                            ProductId = 11,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9989),
                            IsActive = true,
                            ProductId = 12,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9991),
                            IsActive = true,
                            ProductId = 13,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9992),
                            IsActive = true,
                            ProductId = 14,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9994),
                            IsActive = true,
                            ProductId = 15,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9995),
                            IsActive = true,
                            ProductId = 15,
                            SizeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9997),
                            IsActive = true,
                            ProductId = 16,
                            SizeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 356, DateTimeKind.Local).AddTicks(9998),
                            IsActive = true,
                            ProductId = 17,
                            SizeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local),
                            IsActive = true,
                            ProductId = 18,
                            SizeId = 3,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ops.Core.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stocks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId")
                        .IsUnique();

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("SizeId")
                        .IsUnique();

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(148),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 10
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(152),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 4,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(153),
                            IsActive = true,
                            ProductId = 1,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 4,
                            ColorId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(155),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 5,
                            ColorId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(157),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 6,
                            ColorId = 2,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(159),
                            IsActive = true,
                            ProductId = 2,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 7,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(160),
                            IsActive = true,
                            ProductId = 3,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 8,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(162),
                            IsActive = true,
                            ProductId = 3,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 9,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(163),
                            IsActive = true,
                            ProductId = 3,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 10,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(165),
                            IsActive = true,
                            ProductId = 4,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 11,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(167),
                            IsActive = true,
                            ProductId = 4,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 12,
                            ColorId = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(168),
                            IsActive = true,
                            ProductId = 5,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 13,
                            ColorId = 5,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(170),
                            IsActive = true,
                            ProductId = 5,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 14,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(197),
                            IsActive = true,
                            ProductId = 6,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 15,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(201),
                            IsActive = true,
                            ProductId = 6,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 16,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(203),
                            IsActive = true,
                            ProductId = 6,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 17,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(204),
                            IsActive = true,
                            ProductId = 7,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 18,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(207),
                            IsActive = true,
                            ProductId = 8,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 19,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(208),
                            IsActive = true,
                            ProductId = 9,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 20,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(209),
                            IsActive = true,
                            ProductId = 10,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 21,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(211),
                            IsActive = true,
                            ProductId = 10,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 22,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(213),
                            IsActive = true,
                            ProductId = 10,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 23,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(214),
                            IsActive = true,
                            ProductId = 11,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 24,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(216),
                            IsActive = true,
                            ProductId = 11,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 25,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(217),
                            IsActive = true,
                            ProductId = 12,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 26,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(219),
                            IsActive = true,
                            ProductId = 13,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 27,
                            ColorId = 8,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(220),
                            IsActive = true,
                            ProductId = 14,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 28,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(221),
                            IsActive = true,
                            ProductId = 15,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 29,
                            ColorId = 7,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(223),
                            IsActive = true,
                            ProductId = 15,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 30,
                            ColorId = 6,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(224),
                            IsActive = true,
                            ProductId = 16,
                            SizeId = 1,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 31,
                            ColorId = 9,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(226),
                            IsActive = true,
                            ProductId = 17,
                            SizeId = 2,
                            Status = 0,
                            Stocks = 20
                        },
                        new
                        {
                            Id = 32,
                            ColorId = 1,
                            CreatedDate = new DateTime(2024, 1, 9, 13, 28, 16, 357, DateTimeKind.Local).AddTicks(227),
                            IsActive = true,
                            ProductId = 18,
                            SizeId = 3,
                            Status = 0,
                            Stocks = 20
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Ops.Core.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Ops.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Ops.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Ops.Core.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Ops.Core.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ops.Core.Entities.Address", b =>
                {
                    b.HasOne("Ops.Core.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.District", "County")
                        .WithMany("Addresses")
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.AppUser", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("County");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Ops.Core.Entities.ColorProduct", b =>
                {
                    b.HasOne("Ops.Core.Entities.Color", "Color")
                        .WithMany("ColorProducts")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("ColorProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.Comment", b =>
                {
                    b.HasOne("Ops.Core.Entities.AppUser", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.District", b =>
                {
                    b.HasOne("Ops.Core.Entities.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Ops.Core.Entities.HomeSlider", b =>
                {
                    b.HasOne("Ops.Core.Entities.Category", "Category")
                        .WithMany("HomeSliders")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ops.Core.Entities.Order", b =>
                {
                    b.HasOne("Ops.Core.Entities.Address", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.AppUser", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Ops.Core.Entities.Photo", b =>
                {
                    b.HasOne("Ops.Core.Entities.Color", "Color")
                        .WithMany("Photos")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.HasOne("Ops.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductFeature", b =>
                {
                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("Ops.Core.Entities.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ops.Core.Entities.ProductOrder", b =>
                {
                    b.HasOne("Ops.Core.Entities.Order", "order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId");

                    b.HasOne("Ops.Core.Entities.Product", "product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId");

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Ops.Core.Entities.SizeProduct", b =>
                {
                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithMany("SizeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Size", "Size")
                        .WithMany("SizeProducts")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Ops.Core.Entities.Stock", b =>
                {
                    b.HasOne("Ops.Core.Entities.Color", "Color")
                        .WithOne("Stock")
                        .HasForeignKey("Ops.Core.Entities.Stock", "ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Product", "Product")
                        .WithOne("Stock")
                        .HasForeignKey("Ops.Core.Entities.Stock", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ops.Core.Entities.Size", "Size")
                        .WithOne("Stock")
                        .HasForeignKey("Ops.Core.Entities.Stock", "SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Ops.Core.Entities.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Ops.Core.Entities.AppUser", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Ops.Core.Entities.Category", b =>
                {
                    b.Navigation("HomeSliders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ops.Core.Entities.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Ops.Core.Entities.Color", b =>
                {
                    b.Navigation("ColorProducts");

                    b.Navigation("Photos");

                    b.Navigation("Stock")
                        .IsRequired();
                });

            modelBuilder.Entity("Ops.Core.Entities.District", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Ops.Core.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Ops.Core.Entities.Product", b =>
                {
                    b.Navigation("ColorProducts");

                    b.Navigation("Comments");

                    b.Navigation("Photos");

                    b.Navigation("ProductFeature")
                        .IsRequired();

                    b.Navigation("ProductOrders");

                    b.Navigation("SizeProducts");

                    b.Navigation("Stock")
                        .IsRequired();
                });

            modelBuilder.Entity("Ops.Core.Entities.Size", b =>
                {
                    b.Navigation("SizeProducts");

                    b.Navigation("Stock")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
